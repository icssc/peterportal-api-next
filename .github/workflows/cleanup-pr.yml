---
name: Clean up staging PR
on:
  pull_request:
    types:
      - closed
      - labeled
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true
permissions:
  id-token: write
  contents: read
  pull-requests: write
  deployments: write
  repository-projects: write
jobs:
  clean-up:
    if:
      (github.event.action == 'labeled' && github.event.label.name == 'no deploy')
      || github.event.action == 'closed'
    runs-on: ubuntu-latest
    env:
      ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: us-east-1
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}
      HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
      NODE_ENV: staging
      PR_NUM: ${{ github.event.pull_request.number }}
      TURBO_API: ${{ secrets.TURBO_API }}
      TURBO_TEAM: team_peterportal_api_next
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Build assets
        run: npm run build
      - name: Wait for API stack to stabilize
        uses: ./.github/actions/stabilize-stack
        with:
          stack_name: peterportal-api-next-staging-${{ github.event.pull_request.number }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRETS_ACCESS_KEY }}
      - name: Destroy deployed API stack
        run: npm run destroy -- --filter="api-cdk"
      - name: Delete staging URL
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: stagingURL
          delete: true
