---
name: Wait for Stack to Stabilize
description: Wait for all in-progress operations in the stack to complete
inputs:
  stack_name:
    description: The name of the stack to await
    required: true
  aws_access_key_id:
    description: The AWS Access Key ID
    required: true
  aws_secret_access_key:
    description: The AWS Secret Access Key
    required: true
outputs:
  stack-exists:
    description: Whether the stack exists or not
    value: ${{ steps.check-stack-exists.outcome == 'success' &&
      !steps.wait-for-stack-delete.outcome == 'success'}}
runs:
  using: composite
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-access-key-id: ${{ inputs.aws_secret_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: us-east-1
        role-duration-seconds: 2400
    - name: Check if stack exists
      id: check-stack-exists
      run: echo "STACK_STATUS=$(aws cloudformation describe-stacks --stack-name ${{
        inputs.stack_name }} --query "Stacks[0].StackStatus" --output text)" >>
        $GITHUB_ENV
      continue-on-error: true
      shell: bash
    - name: Wait for stack to finish creating
      id: wait-for-stack-create
      if: steps.check-stack-exists.outcome == 'success' && env.STACK_STATUS ==
        'CREATE_IN_PROGRESS'
      run: aws cloudformation wait stack-create-complete --stack-name ${{
        inputs.stack_name }}
      continue-on-error: true
      shell: bash
    - name: Wait for stack to finish updating
      id: wait-for-stack-update
      if: steps.check-stack-exists.outcome == 'success' && env.STACK_STATUS ==
        'UPDATE_IN_PROGRESS'
      run: aws cloudformation wait stack-update-complete --stack-name ${{
        inputs.stack_name }}
      continue-on-error: true
      shell: bash
    - name: Wait for stack to finish deleting
      id: wait-for-stack-delete
      if: steps.check-stack-exists.outcome == 'success' && env.STACK_STATUS ==
        'DELETE_IN_PROGRESS'
      run: aws cloudformation wait stack-delete-complete --stack-name ${{
        inputs.stack_name }}
      continue-on-error: true
      shell: bash
