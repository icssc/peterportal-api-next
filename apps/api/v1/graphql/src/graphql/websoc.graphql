"A type that represents the hour and minute parts of a time."
type HourMinute {
  "The hour (0-23)."
  hour: Int!
  "The minute (0-59)."
  minute: Int!
}
"The meeting information for a section."
type WebsocSectionMeeting {
  """
  Whether the meeting time is TBA.

  If this field is `false`, then `days`, `startTime`, and `endTime`
  are **guaranteed** to be non-null; otherwise, they are **guaranteed** to be null.
  """
  timeIsTBA: Boolean!
  "The classroom(s) the section meets in."
  bldg: [String!]!
  "What day(s) the section meets on (e.g. ``MWF``)."
  days: String
  "The time at which the section begins."
  startTime: HourMinute
  "The time at which the section concludes."
  endTime: HourMinute
}
"The enrollment statistics for a section."
type WebsocSectionEnrollment {
  "The total number of students enrolled in this section."
  totalEnrolled: String!
  """
  The number of students enrolled in the section referred to by this section
  code, if the section is cross-listed. If the section is not cross-listed,
  this field is the empty string.
  """
  sectionEnrolled: String!
}
"The final exam data for a section."
type WebsocSectionFinalExam {
  """
  The status of the exam.

  If this field is `SCHEDULED_FINAL`, then all other fields are
  **guaranteed** to be non-null; otherwise, they are **guaranteed** to be null.
  """
  examStatus: WebsocSectionFinalExamStatus!
  "The month in which the final exam takes place."
  month: Int
  "The day of the month in which the final exam takes place."
  day: Int
  "When the final exam starts."
  startTime: HourMinute
  "When the final exam ends."
  endTime: HourMinute
  "Where the final exam takes place."
  bldg: String
}
"A WebSoc section object."
type WebsocSection {
  "The section code."
  sectionCode: String!
  "The section type (e.g. ``Lec``, ``Dis``, ``Lab``, etc.)"
  sectionType: String!
  "The section number (e.g. ``A1``)."
  sectionNum: String!
  "The number of units afforded by taking this section."
  units: String!
  "The name(s) of the instructor(s) teaching this section."
  instructors: [String!]!
  "The meeting time(s) of this section."
  meetings: [WebsocSectionMeeting!]!
  "The date and time of the final exam for this section."
  finalExam: WebsocSectionFinalExam!
  "The maximum capacity of this section."
  maxCapacity: String!
  """
  The number of students currently enrolled (cross-listed or otherwise) in
  this section.
  """
  numCurrentlyEnrolled: WebsocSectionEnrollment!
  "The number of students currently on the waitlist for this section."
  numOnWaitlist: String!
  "The maximum number of students that can be on the waitlist for this section."
  numWaitlistCap: String!
  "The number of students who have requested to be enrolled in this section."
  numRequested: String!
  "The number of seats in this section reserved for new students."
  numNewOnlyReserved: String!
  "The restriction code(s) for this section."
  restrictions: String!
  "The enrollment status."
  status: EnrollmentStatus!
  "Any comments for the section."
  sectionComment: String!
}
"A WebSoc course object."
type WebsocCourse {
  "The code of the department the course belongs to."
  deptCode: String!
  "The course number."
  courseNumber: String!
  "The title of the course."
  courseTitle: String!
  "Any comments for the course."
  courseComment: String!
  "The link to the WebReg Course Prerequisites page for this course."
  prerequisiteLink: String!
  "All sections of the course."
  sections: [WebsocSection!]!
}
"A WebSoc department object."
type WebsocDepartment {
  "The name of the department."
  deptName: String!
  "The department code."
  deptCode: String!
  "Any comments from the department."
  deptComment: String!
  "All courses of the department."
  courses: [WebsocCourse!]!
  "Any comments for section code(s) under the department."
  sectionCodeRangeComments: [String!]!
  "Any comments for course number(s) under the department."
  courseNumberRangeComments: [String!]!
}
"A WebSoc school object."
type WebsocSchool {
  "The name of the school."
  schoolName: String!
  "Any comments from the school."
  schoolComment: String!
  "All departments of the school."
  departments: [WebsocDepartment!]!
}
type WebsocAPIResponse {
  schools: [WebsocSchool!]!
}
type Department {
  "A string containing the department code and name (e.g. `COMPSCI: Computer Science`)."
  deptLabel: String!
  "The department code."
  deptValue: String!
}
"An object that contains information on a term."
type TermData {
  """
  The short name of the term. (e.g. `2023 Summer1`)
  """
  shortName: String!
  """
  The full name of the term. (`2023 Summer Session 1`)
  """
  longName: String!
}
extend type Query {
  "Perform a WebSoc query."
  websoc(
    year: String!
    quarter: Quarter!
    cache: Boolean
    cacheOnly: Boolean
    includeCoCourses: Boolean
    ge: GE
    department: String
    sectionCodes: String
    instructorName: String
    building: String
    room: String
    division: Division
    courseNumber: String
    courseTitle: String
    sectionType: SectionType
    units: String
    days: String
    startTime: String
    endTime: String
    maxCapacity: String
    fullCourses: FullCourses
    cancelledCourses: CancelledCourses
  ): WebsocAPIResponse!
  "Get data on all available departments."
  depts: [Department!]!
  "Get data on all available terms."
  terms: [TermData!]!
}
