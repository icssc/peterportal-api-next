generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// The parts above this line are used to configure the Prisma Client directly
// and has nothing to do with the database schema.
// You probably do not need to modify it.

// Enums

enum CourseLevel {
  LowerDiv
  UpperDiv
  Graduate
}

enum Quarter {
  Fall
  Winter
  Spring
  Summer1
  Summer10wk
  Summer2
}

enum WebsocSectionType {
  Act
  Col
  Dis
  Fld
  Lab
  Lec
  Qiz
  Res
  Sem
  Stu
  Tap
  Tut
}

enum RestrictionCode {
  A
  B
  C
  D
  E
  F
  G
  H
  I
  J
  K
  L
  M
  N
  O
  R
  S
  X
}

// Models

model Alias {
  department String @id
  alias      String
}

model CalendarTerm {
  year             String
  quarter          Quarter
  instructionStart DateTime @db.Date
  instructionEnd   DateTime @db.Date
  finalsStart      DateTime @db.Date
  finalsEnd        DateTime @db.Date
  socAvailable     DateTime @default("1970-01-01T00:00:00Z") @db.Date

  @@id([year, quarter])
  @@unique([year, quarter], name: "idx")
}

model Course {
  id                String      @id
  department        String
  courseNumber      String
  courseNumeric     Int
  school            String
  title             String
  courseLevel       CourseLevel
  minUnits          Float
  maxUnits          Float
  description       String      @db.Text
  departmentName    String
  instructorHistory String[]
  instructors       Json        @default("[]")
  prerequisiteTree  Json
  prerequisiteList  String[]
  prerequisiteText  String      @db.Text
  prerequisiteFor   String[]
  prerequisites     Json        @default("[]")
  dependencies      Json        @default("[]")
  repeatability     String
  gradingOption     String
  concurrent        String
  sameAs            String
  restriction       String      @db.Text
  overlap           String
  corequisites      String
  geList            String[]
  geText            String
  terms             String[]
}

model Instructor {
  ucinetid           String   @id
  name               String
  shortenedName      String
  title              String
  email              String
  department         String
  schools            String[]
  relatedDepartments String[]
  courseHistory      Json
  courses            Json     @default("[]")
}

model GradesInstructor {
  year        String
  quarter     Quarter
  sectionCode String
  section     GradesSection @relation(fields: [year, quarter, sectionCode], references: [year, quarter, sectionCode])
  name        String

  @@id([year, quarter, sectionCode, name])
  @@unique([year, quarter, sectionCode, name], name: "idx")
}

model GradesSection {
  year          String
  quarter       Quarter
  sectionCode   String
  department    String
  courseNumber  String
  courseNumeric Int
  hasGEData     Boolean            @default(false)
  isGE1A        Boolean?
  isGE1B        Boolean?
  isGE2         Boolean?
  isGE3         Boolean?
  isGE4         Boolean?
  isGE5A        Boolean?
  isGE5B        Boolean?
  isGE6         Boolean?
  isGE7         Boolean?
  isGE8         Boolean?
  instructors   GradesInstructor[]
  gradeACount   Int
  gradeBCount   Int
  gradeCCount   Int
  gradeDCount   Int
  gradeFCount   Int
  gradePCount   Int
  gradeNPCount  Int
  gradeWCount   Int
  averageGPA    Float

  @@id([year, quarter, sectionCode])
  @@unique([year, quarter, sectionCode], name: "idx")
}

model WebsocEnrollmentHistoryEntry {
  year                    String
  quarter                 Quarter
  sectionCode             Int
  WebsocEnrollmentHistory WebsocEnrollmentHistory @relation(fields: [year, quarter, sectionCode], references: [year, quarter, sectionCode])
  date                    DateTime                @db.Date
  maxCapacity             String
  totalEnrolled           String
  waitlist                String
  waitlistCap             String
  requested               String
  newOnlyReserved         String
  status                  String

  @@id([year, quarter, sectionCode, date])
  @@unique([year, quarter, sectionCode, date], name: "idx")
}

model WebsocEnrollmentHistory {
  year         String
  quarter      Quarter
  sectionCode  Int
  department   String
  courseNumber String
  sectionType  WebsocSectionType
  sectionNum   String
  units        String
  instructors  String[]
  meetings     Json
  finalExam    String
  entries      WebsocEnrollmentHistoryEntry[]

  @@id([year, quarter, sectionCode])
  @@unique([year, quarter, sectionCode], name: "idx")
}

model WebsocSectionInstructor {
  id          Int           @id @default(autoincrement())
  year        String
  quarter     Quarter
  sectionCode Int
  timestamp   DateTime
  section     WebsocSection @relation(fields: [year, quarter, sectionCode, timestamp], references: [year, quarter, sectionCode, timestamp])
  name        String
}

model WebsocSectionMeetingBuilding {
  id          Int                  @id @default(autoincrement())
  year        String
  quarter     Quarter
  sectionCode Int
  timestamp   DateTime
  daysString  String
  startTime   Int
  endTime     Int
  meeting     WebsocSectionMeeting @relation(fields: [year, quarter, sectionCode, timestamp, daysString, startTime, endTime], references: [year, quarter, sectionCode, timestamp, daysString, startTime, endTime])
  bldg        String
}

model WebsocSectionMeeting {
  id          Int                            @id @default(autoincrement())
  year        String
  quarter     Quarter
  sectionCode Int
  timestamp   DateTime
  section     WebsocSection                  @relation(fields: [year, quarter, sectionCode, timestamp], references: [year, quarter, sectionCode, timestamp])
  days        Json
  daysString  String
  startTime   Int
  endTime     Int
  buildings   WebsocSectionMeetingBuilding[]

  @@unique([year, quarter, sectionCode, timestamp, daysString, startTime, endTime], name: "idx")
}

model WebsocSection {
  year             String
  quarter          Quarter
  sectionCode      Int
  timestamp        DateTime
  geCategories     Json
  department       String
  courseNumber     String
  courseNumeric    Int
  instructors      WebsocSectionInstructor[]
  courseTitle      String
  sectionType      WebsocSectionType
  units            String
  meetings         WebsocSectionMeeting[]
  maxCapacity      Int
  sectionFull      Boolean
  waitlistFull     Boolean
  overEnrolled     Boolean
  cancelled        Boolean
  restrictionCodes RestrictionCode[]
  data             Json

  @@id([year, quarter, sectionCode, timestamp])
  @@unique([year, quarter, sectionCode, timestamp], name: "idx")
}
